#!/usr/bin/python
import geotools
import scrapper
import os
import json
from telebot import types
# This is a simple echo bot using the decorator mechanism.
# It echoes any incoming text messages.

import telebot

API_TOKEN = '7009172269:AAG-3Jb1CVeYaQ6ub9_dWi7i4RBtCe5xNqo'

bot = telebot.TeleBot(API_TOKEN)

# Handle '/start' and '/help'
user_choose = 0
with open("/home/troy/dev/gdc/data.json", 'r', encoding='utf-8') as file:
    data = json.load(file)
# print(data)


@bot.message_handler(commands=['help', 'start'])
def send_welcome(message):
    keyboard = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
    button_geo = types.KeyboardButton(
        text="Send location", request_location=True)
    keyboard.add(button_geo)
    text = "–Ø –≤–∞—à –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –≥–∏–¥, –ø—Ä–∏–∑–≤–∞–Ω–Ω—ã–π —Å–¥–µ–ª–∞—Ç—å –≤–∞—à –≤–∏–∑–∏—Ç –≤ –ê—Å—Ç–∞–Ω—É –Ω–µ–∑–∞–±—ã–≤–∞–µ–º—ã–º. –ù–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç —Ç–æ–≥–æ, –∏—â–µ—Ç–µ –ª–∏ –≤—ã –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –ø–æ —Å–∞–º—ã–º –ø–æ—Ç—Ä—è—Å–∞—é—â–∏–º –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—è–º –≥–æ—Ä–æ–¥–∞ –∏–ª–∏ –≤–∞–º –Ω—É–∂–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—è—Ö –ê—Å—Ç–∞–Ω—ã, —è –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å.\n–í–æ—Ç —á—Ç–æ —è –º–æ–≥—É –¥–ª—è –≤–∞—Å —Å–¥–µ–ª–∞—Ç—å: \n‚úÖ –°–æ–∑–¥–∞–≤–∞–π—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤–∞—à–µ–≥–æ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è, –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π –∏ –≤–∏–¥–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞.\n‚úÖ –ü—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—è—Ö, –≤–∫–ª—é—á–∞—è –æ–ø–∏—Å–∞–Ω–∏—è, –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç, —á–∞—Å—ã —Ä–∞–±–æ—Ç—ã –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–∏–ª–µ—Ç–∞—Ö.\n‚úÖ –ü–æ–º–æ–≥–∞–π—Ç–µ —Å –∑–∞–ø—Ä–æ—Å–∞–º–∏, —Å–≤—è–∑–∞–Ω–Ω—ã–º–∏ —Å Citypass Astana, —á—Ç–æ–±—ã –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –ø—Ä–æ—à–ª–æ –±–µ–∑ –æ—Å–ª–æ–∂–Ω–µ–Ω–∏–π.\n–î–∞–≤–∞–π—Ç–µ –∏—Å—Å–ª–µ–¥—É–µ–º –ê—Å—Ç–∞–Ω—É –≤–º–µ—Å—Ç–µ.! üöÄ\n/list /help"
    bot.send_message(message.chat.id, text)
@bot.message_handler(commands=['update'])
def update(message):
    bot.send_message(message.chat.id, "in process")
    scrapper.dump_data()
    bot.send_message(message.chat.id, "done")


@ bot.message_handler(commands=['list'])
def send_list(message):
    if os.path.exists("/home/troy/dev/gdc/data.json"):
        text= ""
        for i in range(len(data)):
            text += str(i) + ". " + data[i]["name"] + "\n"
        bot.send_message(message.chat.id, text)
    else:
        scrapper.dump_data()
        bot.send_message(message.chat.id, "–ü–æ–¥–æ–∂–¥–∏—Ç–µ....")
        bot.send_message(message.chat.id, "–ì–æ—Ç–æ–≤–æ! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑")

# Handle all other messages with content_type 'text' (content_types defaults to ['text'])


user_states= {}


@ bot.message_handler(func=lambda message: True)
def echo_message(message):
    try:
        choose= int(message.text)
        user_states[message.chat.id]= {'choose': choose}
        print(choose)
        item= data[choose]
        name= item.get('name', '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö')
        schedule= item.get('schedule', '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–æ')
        contact= item.get('contact', '–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∞')
        buses_list= " ".join(item.get('buses', [])) if item.get(
            'buses') else '–ú–∞—Ä—à—Ä—É—Ç–∫–∏ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω—ã'
        geo = item["geo"]
        response_text = f"{name}\n–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ: {schedule}\n–î–æ—Å—Ç—É–ø–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç–∫–∏: {buses_list}\n–ö–æ–Ω—Ç–∞–∫—Ç—ã: {contact}\n–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ—é –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é, —á—Ç–æ–± —è –º–æ–≥ –ø–æ—Å—Ç—Ä–æ–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç"
        bot.send_message(message.chat.id, response_text)

        @bot.message_handler(content_types=['location'])
        def handle_location(message):
            choose = user_states[message.chat.id]['choose']
            print(data[choose]["geo"], choose)
            origin = f"{message.location.latitude}, {message.location.longitude}"
            destination = f"{data[choose]['geo'][0]}, {data[choose]['geo'][1]}"
            print(destination)
            route_url = geotools.compute_route(
                origin, destination)
            bot.send_photo(message.chat.id, f"{route_url}")
            route_message = f"[–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å](https://www.google.com/maps/dir/?api=1&origin={origin}&destination={destination}&travelmode=driving)"
            bot.send_message(message.chat.id, route_message,
                             parse_mode="markdown")

    except ValueError:
        bot.send_message(
            message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä.")
    except TypeError:
        bot.send_message(
            message.chat.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ —Ç–∏–ø–∞ –¥–∞–Ω–Ω—ã—Ö, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")


bot.infinity_polling()
bot.infinity_polling()
bot.infinity_polling()
bot.infinity_polling()
